{"version":3,"sources":["stars.js","list-tail.js","list.js","listContainer.js","giphy.js","App.js","serviceWorker.js","index.js"],"names":["Stars","togelStar","console","log","props","id","onClick","this","star","React","Component","ListTail","togelFullStar","index","starterCounter","state","counter","newStars","stars","splice","size","setState","counterPlus","favClicked","e","favFlag","notHeart","resturant","heart","heartAll","allstars","map","key","className","List","cheaked","deleteSelected","deleteClicked","deleteAList","class","type","name","charAt","toUpperCase","slice","cusine","districtSelected","comment","fav","isFav","ListContainer","alllists","lists","length","Giphy","giveMeMood","axios","method","url","then","res","data","images","preview_gif","giphy","imgto","catch","error","App","handleChangeSelect","event","selectedCountry","target","value","handleChangeRS","resturantName","handleChangeCU","handleSubmit","preventDefault","resturantNameObj","selectedDistrict","checkedToDelet","delete","countrySelected","handleDeleteAll","handlerDeleteAList","indexDelet","newLists","selected","handleDeleteSelected","newarr","restdel","restlist","indexOf","favAllDisplay","favAllDisplay2","img","imgtoApper","favAll","obj","newfav","push","lis","textArea","districtSl","district","allDistrict","cont","checked","src","for","onChange","placeholder","favVeiw","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.92181418.chunk.js","sourcesContent":["import React from 'react';\n\n\nexport default class Stars extends React.Component{\n    togelStar = ()=>{\n        console.log('change to full star')\n        this.props.togelStar(this.props.id)\n    }\n    \n    render(){\n        return(\n            <div>\n                <div onClick={this.togelStar}>{this.props.star}</div>\n            </div>\n        )\n    }\n}\n","import React from \"react\";\nimport Stars from \"./stars\";\n// import { MdDeleteForever } from \"react-icons/md\";\nimport { IoIosStarOutline } from \"react-icons/io\";\nimport { IoIosStar } from \"react-icons/io\";\nimport { IoIosHeartEmpty } from \"react-icons/io\";\nimport { IoIosHeart } from \"react-icons/io\";\n\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nexport default class ListTail extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stars: [\n        <IoIosStarOutline size={22} />,\n        <IoIosStarOutline size={22} />,\n        <IoIosStarOutline size={22} />,\n        <IoIosStarOutline size={22} />,\n        <IoIosStarOutline size={22} />\n      ],\n      counter: 0,\n      heart: this.props.resturant.heart || <IoIosHeartEmpty size={27} />,\n      favFlag: false\n    };\n  }\n\n  togelFullStar = index => {\n    const starterCounter = this.state.counter;\n    if (starterCounter === index) {\n      const newStars = [...this.state.stars];\n      // newStars.splice(index);\n      newStars.splice(index, 1, <IoIosStar size={22} />);\n      this.setState({\n        stars: newStars\n      });\n      const counterPlus = starterCounter + 1;\n      this.setState({ counter: counterPlus });\n    }\n  };\n  favClicked = e => {\n    console.log(\"click HEART\");\n    if (!this.state.favFlag) {\n      this.setState({ heart: <IoIosHeart size={27} /> , favFlag:true});\n      // fav:[...this.state.fav]\n      // console.log(this.state.fav)\n      console.log(\"this.props.resturantobj\", this.props.resturant);\n      this.props.heartAll({\n        ...this.props.resturant,\n        heart: <IoIosHeart size={27}/>,\n        stars:[...this.state.stars],\n        \n      });\n      \n    } else {\n      console.log(\"click Not HEART \");\n      this.props.notHeart(this.props.resturant)\n      console.log(this.props.resturant)\n      this.setState({ heart: <IoIosHeartEmpty size={27} />, favFlag:false });\n\n      \n    }\n  };\n\n  render() {\n    const allstars = this.state.stars.map((star, index) => {\n      return (\n        <div>\n          <Stars\n            star={star}\n            key={index}\n            id={index}\n            togelStar={this.togelFullStar}\n          />\n        </div>\n      );\n    });\n    return (\n      <section className=\"list-item-tail\">\n        <div className=\"stars\">{allstars}</div>\n         <span onClick={this.favClicked} className=\"heart\" >\n          {this.state.heart}\n        </span>\n        \n        {/* <span onClick={this.deleteClicked} className=\"icon\"><MdDeleteForever size={27}/></span> */}\n      </section>\n    );\n  }\n}\n\n// import React from 'react';\n// import Stars from './stars';\n// import { MdDeleteForever } from \"react-icons/md\";\n// import { IoIosStarOutline } from \"react-icons/io\";\n// import { IoIosStar } from \"react-icons/io\";\n// import { IoIosHeartEmpty} from \"react-icons/io\";\n// import { IoIosHeart} from \"react-icons/io\";\n\n// // import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n// export default class ListTail extends React.Component\n// { constructor(props){\n//     super(props);\n//     this.state = {\n//     stars:[<IoIosStarOutline size={22}/>,<IoIosStarOutline size={22}/>,<IoIosStarOutline size={22}/>,<IoIosStarOutline size={22}/>,<IoIosStarOutline size={22}/>],\n//     counter:0,\n//     heart: this.props.resturant.heart || <IoIosHeartEmpty size={27}/>,\n//     favFlag: false,\n\n// }\n// }\n\n//     deleteClicked = (e)=>{\n//         console.log(\"delete resturant\")\n//         // this.props.resturant = this.props.resturant(this)\n//         this.props.deleteAList(this.props.id);\n//     }\n//     togelFullStar = (index)=>{\n//         const starterCounter = this.state.counter;\n//         if (starterCounter === index ){\n//         const newStars=[...this.state.stars]\n//         // newStars.splice(index);\n//         newStars.splice(index,1,<IoIosStar size={22}/>);\n//         this.setState({\n//         stars:newStars,\n//         })\n//         const counterPlus = starterCounter + 1;\n//         this.setState({counter:counterPlus});\n//     }\n// }\n//     favClicked = (e)=>{\n//         console.log(\"click HEART\")\n//         if (!this.state.favFlag)\n//         {\n\n//             this.setState({heart:<IoIosHeart size={27}/> ,\n//                  favFlag:true,\n//                 })\n//                 // fav:[...this.state.fav]\n//                 // console.log(this.state.fav)\n//                 console.log('this.props.resturantobj', this.props.resturant)\n//             this.props.heartAll({...this.props.resturant,heart:<IoIosHeart size={27}/>})\n//         } else {\n//             console.log(\"click HEART ELSE\")\n//             this.setState({heart:<IoIosHeartEmpty  size={27}/> ,\n//                  favFlag:false,\n//                 })\n\n//         }\n//     }\n\n//     render(){\n//         const allstars = this.state.stars.map((star,index)=>{\n//             return (\n//                 <div >\n//                 <Stars star={star} key={index} id={index} togelStar={this.togelFullStar} />\n//                 </div>)\n//         })\n//         return(\n//             <section className=\"list-item-tail\">\n//             <div className=\"stars\">\n//                 {allstars}\n//             </div>\n//             <span onClick={this.favClicked} className=\"icon\">{this.state.heart}</span>\n//             <span onClick={this.deleteClicked} className=\"icon\"><MdDeleteForever size={27}/></span>\n//             </section>\n\n//         )\n//     }\n// }\n","import React from 'react';\nimport ListTail from './list-tail';\nimport { MdDeleteForever } from \"react-icons/md\";\n\n\nexport default class List extends React.Component{\n   \n    cheaked = () =>{\n        console.log(this.props.resturant + \"im list component\")\n        this.props.deleteSelected(this.props.resturant)\n    }\n    deleteClicked = (e)=>{\n        console.log(\"delete resturant\")\n        // this.props.resturant = this.props.resturant(this)\n        this.props.deleteAList(this.props.id);\n    }\n\n   \n    render(){\n        \n        return(\n            \n            <div class=\"list-container\">\n             <input type=\"checkbox\" className=\"checkbox\" onClick={this.cheaked}></input>\n             <h1>{this.props.resturant.name.charAt(0).toUpperCase() + this.props.resturant.name.slice(1)}</h1>\n             <p>{this.props.resturant.cusine}</p>\n             <p>{this.props.resturant.districtSelected}</p>\n             <p>{this.props.resturant.comment}</p>\n\n                <div className=\"footerList\">\n                  <span onClick={this.deleteClicked} className=\"icondelete\"><MdDeleteForever size={27}/></span> \n                  <ListTail fav ={this.props.fav} notHeart ={this.props.notHeart} isFav = {this.props.isFav} heartAll={this.props.heartAll} deleteAList={this.props.deleteAList} resturant={this.props.resturant} key={this.props.index} id={this.props.index}/>\n                </div>\n            </div>\n\n             )\n    }\n}","import React from 'react';\nimport List from './list';\n// import ListTail from './list-tail';\n\n\nexport default class ListContainer extends React.Component{\nrender(){\n     \n    let alllists = null;\n    \n    if (this.props.lists.length > 0) {\n        console.log('alllist data', this.props.lists)\n        alllists = this.props.lists.map((resturant, index) =>{\n            return (\n             <div className=\"list-item\"  > \n             {/* key={index} */}\n            <List resturant={resturant} index ={index} key ={index} map={this.props.map} deleteSelected={this.props.deleteSelected} deleteAList={this.props.deleteAList}  heartAll={this.props.heartAll} fav={this.props.fav} notHeart ={this.props.notHeart} isFav = {this.props.isFav}/>\n\n            {/* <ListTail heartAll={this.props.heartAll} deleteAList={this.props.deleteAList} resturant={resturant} key={index} id={index}/> */}\n            </div>)\n        });\n    }\n    return(\n          <div className=\"list\">\n              {alllists}\n          </div>\n    )\n}\n\n\n}","import React from 'react';\nimport axios from 'axios';\n\nexport default class Giphy extends React.Component{\n    // constructor(props){\n    //     super(props);\n    //     this.state={\n    //         img: ''\n    //     }\n    // }\n    giveMeMood=()=>{\n    axios({\n    method: 'GET',\n    url: 'https://api.giphy.com/v1/stickers/random?api_key=INYnrH1INJdy8yQ5SgKXEMMdIR7mNQFl&tag=eat&rating=G',\n  })\n    .then(res => {\n      // handle success\n      console.log(res.data.data.images.preview_gif.url);\n        \n      const giphy= res.data.data.images.preview_gif.url\n    //    this.setState({img:giphy})\n       this.props.imgto(giphy)\n    //   this.prpos.mood(url)\n    })\n    .catch(error => {\n      // handle error\n      console.log(error);\n    });\n}\nrender(){\n    return(<dive>\n     <label></label>\n     <button onClick={this.giveMeMood} type=\"button\" class=\"btn btn-warning\">Find Your Food Mood</button>\n\n     {/* <button onClick={this.giveMeMood}>Find Your Food Mood</button> */}\n      \n    </dive>\n\n    )\n}\n}","import React from \"react\";\nimport ListContainer from \"./listContainer\";\nimport Giphy from \"./giphy\";\n\nimport \"./App.css\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      resturantName: \"\",\n      cusine: \"\",\n      comment: \"\",\n      lists: [],\n      resturantNameObj: {},\n      img: \"\",\n      fav: [],\n      isFav: false,\n      district: [\n        \"Hitten\",\n        \"Mohammadyah\",\n        \"Alnakeel\",\n        \"Olaya\",\n        \"Almaazer\",\n        \"Almlqa\",\n        \"Alyasmen\",\n        \"Alsahafah\",\n        \"Altahlyah\",\n        \"Almueuj\",\n        \"Alaqiq\",\n      ],\n      selectedDistrict: \"Saudi Arabia\",\n      class: \"hide\"\n    };\n  }\n  handleChangeSelect = event => {\n    // console.log(event.target.value)\n    // console.log(event.target)\n    this.setState({ selectedCountry: event.target.value });\n  };\n  handleChangeRS = event => {\n    // console.log(event.target.value)\n    this.setState({ resturantName: event.target.value });\n  };\n  handleChangeCU = e => {\n    console.log(e.target.value);\n    this.setState({ cusine: e.target.value });\n  };\n  handleSubmit = event => {\n    event.preventDefault();\n    if (this.state.resturantName != \"\") {\n      console.log(this.state.resturantNameObj);\n\n      console.log(this.state.lists);\n      this.setState({\n        lists: [\n          ...this.state.lists,\n          {\n            name: this.state.resturantName,\n            cusine: this.state.cusine,\n            comment: this.state.comment,\n            districtSelected: this.state.selectedDistrict\n          }\n        ],\n        resturantName: \"\",\n        cusine: \"\",\n        comment: \"\",\n        checkedToDelet: \"false\",\n        delete: [],\n        countrySelected: \"Saudi Arabia\"\n      });\n    }\n  };\n  // when youser click in on list to delete it\n  // new arry of list\n  handleDeleteAll = event => {\n    // if (checkedToDelet){\n    event.preventDefault();\n    console.log(this.state.lists);\n    this.setState({ lists: [] });\n    console.log(this.state.lists.length);\n  };\n  handlerDeleteAList = indexDelet => {\n    const newLists = [...this.state.lists];\n    newLists.splice(indexDelet, 1);\n    this.setState({\n      lists: newLists,\n      selected: false\n    });\n  };\n  deleteSelected = resturant => {\n    console.log(resturant + \"delet me\");\n    //  const newdelete=[...this.state.delete];\n    //  newdelete.push(resturant);\n    this.setState({\n      delete: [...this.state.delete, resturant],\n      selected: true\n    });\n  };\n  handleDeleteSelected = () => {\n    const newarr = [...this.state.lists];\n    this.state.delete.map(restdel => {\n      this.state.lists.map(restlist => {\n        console.log(restlist);\n        if (restdel.name === restlist.name && (this.state.selected = true)) {\n          let index = newarr.indexOf(restlist);\n          console.log(index);\n          newarr.splice(index, 1);\n          console.log(newarr.length);\n          //  this.setState({lists:newarr ,delete:[]})\n          //  this.setState({lists:[...this.state.lists, ]]})\n        }\n      });\n    });\n    this.setState({ lists: newarr, delete: [] });\n  };\n  favAllDisplay = () => {\n    this.setState({ class: \"display\" });\n  };\n  favAllDisplay2 = () => {\n    this.setState({ class: \"hide\" });\n  };\n\n  giveMeMood = url => {\n    this.state.img = url;\n  };\n  imgtoApper = giphy => {\n    this.setState({ img: giphy });\n  };\n\n  favAll = obj => {\n    console.log(obj);\n    const newfav = [...this.state.fav];\n    newfav.push(obj);\n    this.setState({ fav: newfav, isFav: true });\n  };\n  notHeart = res => {\n    if (this.state.fav.length > 0 ) {\n      const newarr = [...this.state.fav];\n      this.state.fav.map(lis => {\n        console.log(res.name);\n        console.log(lis.name);\n\n        if (res.name === lis.name) {\n          console.log(\"h44\");\n          let index = newarr.indexOf(res);\n          console.log(index);\n          console.log(\"h2\");\n          newarr.splice(index, 1);\n          console.log(newarr.length);\n        }\n      });\n\n      this.setState({ fav: newarr, isFav: false });\n    }\n  };\n  textArea = e => {\n    this.setState({ comment: e.target.value });\n    console.log(this.state.comment);\n  };\n  districtSl = e => {\n    this.setState({ setState: e.target.value });\n  };\n  render() {\n    const allDistrict = this.state.district.map((cont, index) => {\n      return (\n        <option value={cont} checked={this.state.district === this.value}>\n          {index + 1}. {cont}\n        </option>\n      );\n      // selected\n    });\n\n    return (<div className=\"body\">\n      <div className=\" text-center\">\n        <h1>Let's Eat</h1>\n        <div className=\"mood-area\">\n          <img\n            src={this.state.img}\n            className=\"rounded\"\n            className=\"giphy-name\"\n          ></img>\n          <br />\n          <Giphy imgto={this.imgtoApper} /> <br />\n        </div>\n        \n        <div className=\"form\">\n          {/* <label>Add Your Favorite Resturant: </label>\n        <input \n        type=\"text\"\n        name=\"resturantName\"\n        placeholder=\"I like .....\"\n        value={this.state.resturantName}\n        onChange={this.handleChangeRS} /><br/> */}\n          <div className=\"form-group\">\n            <label for=\"formGroupExampleInput\">\n              Add Your Favorite Resturant:\n            </label>\n            <input\n              onChange={this.handleChangeRS}\n              value={this.state.resturantName}\n              type=\"text\"\n              className=\"form-control\"\n              id=\"formGroupExampleInput\"\n              placeholder=\"I like .....\"\n            />\n          </div>\n          <label>Cousine : </label>\n          <div class=\"form-check\">\n            <input\n              onChange={this.handleChangeCU}\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"exampleRadios\"\n              id=\"exampleRadios1\"\n              value=\"Arabic Food\"\n              checked={this.state.cusine === \"Arabic Food\"}\n            />\n            <label class=\"form-check-label\" for=\"exampleRadios1\">\n              Arabic\n            </label>\n          </div>\n          <div class=\"form-check\">\n            <input\n              onChange={this.handleChangeCU}\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"exampleRadios\"\n              id=\"exampleRadios1\"\n              value=\"Aisan Food\"\n              checked={this.state.cusine === \"Aisan Food\"}\n            />\n            <label class=\"form-check-label\" for=\"exampleRadios1\">\n              Aisan\n            </label>\n          </div>\n          <div class=\"form-check\">\n            <input\n              onChange={this.handleChangeCU}\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"exampleRadios\"\n              id=\"exampleRadios1\"\n              value=\"Indain Food \"\n              checked={this.state.cusine === \"Indain Food \"}\n            />\n            <label class=\"form-check-label\" for=\"exampleRadios1\">\n              Indain\n            </label>\n          </div>\n          <div class=\"form-check\">\n            <input\n              onChange={this.handleChangeCU}\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"exampleRadios\"\n              id=\"exampleRadios1\"\n              value=\"Italian Food \"\n              checked={this.state.cusine === \"Italian Food \"}\n            />\n            <label class=\"form-check-label\" for=\"exampleRadios1\">\n              Italian\n            </label>\n          </div>\n          <div class=\"form-check\">\n            <input\n              onChange={this.handleChangeCU}\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"exampleRadios\"\n              id=\"exampleRadios1\"\n              value=\"Fast Food \"\n              checked={this.state.cusine === \"Fast Food \"}\n            />\n            <label class=\"form-check-label\" for=\"exampleRadios1\">\n              Fast Food\n            </label>\n          </div>\n          <div class=\"form-check\">\n            <input\n              onChange={this.handleChangeCU}\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"exampleRadios\"\n              id=\"exampleRadios1\"\n              value=\"Coffee Shop\"\n              checked={this.state.cusine === \"Coffee Shop\"}\n            />\n            <label class=\"form-check-label\" for=\"exampleRadios1\">\n              Coffee Shop\n            </label>\n          </div>\n          <br/> \n          {/* RRTR:{allCont} */}\n          <label>Where in Riyadh: </label>\n          <select\n            id=\"distictSel\"\n            size=\"1\"\n            value={this.state.selectedDistrict}\n            onChange={this.handleChangeSelect}\n          >\n            {allDistrict}\n          </select>\n          {/* {console.log(a)} */}\n          <br /><br/> \n          {/* <label>location</label><button onClick={this.map}>find my resturant</button><br/> */}\n          <label>Comments :</label>\n          <br />\n          <textarea\n            onChange={this.textArea}\n            value={this.state.comment}\n          ></textarea>{\" \"}\n          <br />\n          <button\n            onClick={this.handleSubmit}\n            type=\"submit\"\n            class=\"btn btn-warning\"\n          >\n            Submit\n          </button>\n          <br />\n          <button className=\"btn btn-secondary\" onClick={this.handleDeleteAll}>Delete All</button>{' '}\n          <button onClick={this.handleDeleteSelected}  class=\"btn btn-warning\">Delete </button>{' '}\n          <button className=\"btn btn-secondary\" type=\"button\" value=\"Click\" onClick={this.favAllDisplay}>\n            View All Favorites\n          </button> {' '}\n          <button  className=\"btn btn-warning\" type=\"button\" value=\"Click\" onClick={this.favAllDisplay2}>\n            Hid All Favorites\n          </button>\n          <br /><br /><br />\n        </div>\n        <div>\n          <ListContainer\n            lists={this.state.lists}\n            deleteSelected={this.deleteSelected}\n            deleteAList={this.handlerDeleteAList}\n            heartAll={this.favAll}\n            fav={this.fav}\n            notHeart={this.notHeart}\n            isFav={this.isFav}\n          />\n        </div>\n\n        <hr />\n        <div className={this.state.class}>\n          <h3>My Favs</h3>\n          <ListContainer\n            lists={this.state.fav}\n            deleteSelected={this.deleteSelected}\n            deleteAList={this.handlerDeleteAList}\n            heartAll={this.favAll}\n            favVeiw={this.favVeiw}\n            fav={this.fav}\n            notHeart={this.notHeart}\n            isFav={this.isFav}\n          />\n        </div>\n      </div>\n      </div>\n    );\n  }\n}\n\n\n// <div class=\"body\"><h1>Let's Eat</h1>\n//     <Form className=\"lolo\" >\n//           <Form.Group controlId=\"exampleForm.ControlInput1\">\n//             <Form.Label>Email address</Form.Label>\n//             <Form.Control type=\"email\" placeholder=\"name@example.com\" />\n//           </Form.Group>\n//           <Form.Group controlId=\"exampleForm.ControlSelect1\">\n//             <Form.Label>Example select</Form.Label>\n//             <Form.Control as=\"select\">\n//               <option>1</option>\n//               <option>2</option>\n//               <option>3</option>\n//               <option>4</option>\n//               <option>5</option>\n//             </Form.Control>\n//           </Form.Group>\n//           <Form.Group controlId=\"exampleForm.ControlSelect2\">\n//             <Form.Label>Example multiple select</Form.Label>\n//             <Form.Control as=\"select\" multiple>\n//               <option>1</option>\n//               <option>2</option>\n//               <option>3</option>\n//               <option>4</option>\n//               <option>5</option>\n//             </Form.Control>\n//           </Form.Group>\n//           <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n//             <Form.Label>Example textarea</Form.Label>\n//             <Form.Control as=\"textarea\" rows=\"3\" />\n//           </Form.Group>\n//         </Form> ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}