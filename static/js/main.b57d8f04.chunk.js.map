{"version":3,"sources":["stars.js","list-tail.js","list.js","listContainer.js","giphy.js","App.js","a.js","serviceWorker.js","index.js"],"names":["Stars","togelStar","console","log","props","id","onClick","this","star","React","Component","ListTail","togelFullStar","index","starterCounter","state","counter","newStars","stars","splice","size","setState","counterPlus","favClicked","e","favFlag","heart","resturant","heartAll","allstars","map","key","className","List","cheaked","deleteSelected","deleteClicked","deleteAList","class","type","name","charAt","toUpperCase","slice","cusine","comment","ListContainer","alllists","lists","length","Giphy","giveMeMood","axios","method","url","then","res","data","images","preview_gif","giphy","imgto","catch","error","App","handleChangeRS","event","resturantName","target","value","handleChangeCU","handleSubmit","preventDefault","resturantNameObj","checkedToDelet","delete","handleDeleteAll","handlerDeleteAList","indexDelet","newLists","selected","handleDeleteSelected","newarr","restdel","restlist","indexOf","window","open","img","imgtoApper","favAll","obj","newfav","fav","push","textArea","counterySl","countery","allCont","cont","checked","src","for","onChange","placeholder","favAllDisplay","googlemap","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b57d8f04.chunk.js","sourcesContent":["import React from 'react';\n\n\nexport default class Stars extends React.Component{\n    togelStar = ()=>{\n        console.log('change to full star')\n        this.props.togelStar(this.props.id)\n    }\n    \n    render(){\n        return(\n            <div>\n                <div onClick={this.togelStar}>{this.props.star}</div>\n            </div>\n        )\n    }\n}\n","import React from \"react\";\nimport Stars from \"./stars\";\n// import { MdDeleteForever } from \"react-icons/md\";\nimport { IoIosStarOutline } from \"react-icons/io\";\nimport { IoIosStar } from \"react-icons/io\";\nimport { IoIosHeartEmpty } from \"react-icons/io\";\nimport { IoIosHeart } from \"react-icons/io\";\n\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nexport default class ListTail extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stars: [\n        <IoIosStarOutline size={22} />,\n        <IoIosStarOutline size={22} />,\n        <IoIosStarOutline size={22} />,\n        <IoIosStarOutline size={22} />,\n        <IoIosStarOutline size={22} />\n      ],\n      counter: 0,\n      heart: this.props.resturant.heart || <IoIosHeartEmpty size={27} />,\n      favFlag: false\n    };\n  }\n\n  togelFullStar = index => {\n    const starterCounter = this.state.counter;\n    if (starterCounter === index) {\n      const newStars = [...this.state.stars];\n      // newStars.splice(index);\n      newStars.splice(index, 1, <IoIosStar size={22} />);\n      this.setState({\n        stars: newStars\n      });\n      const counterPlus = starterCounter + 1;\n      this.setState({ counter: counterPlus });\n    }\n  };\n  favClicked = e => {\n    console.log(\"click HEART\");\n    if (!this.state.favFlag) {\n      this.setState({ heart: <IoIosHeart size={27} />, favFlag: true });\n      // fav:[...this.state.fav]\n      // console.log(this.state.fav)\n      console.log(\"this.props.resturantobj\", this.props.resturant);\n      this.props.heartAll({\n        ...this.props.resturant,\n        heart: <IoIosHeart size={27} />\n      });\n    } else {\n      console.log(\"click HEART ELSE\");\n      this.setState({ heart: <IoIosHeartEmpty size={27} />, favFlag: false });\n    }\n  };\n\n  render() {\n    const allstars = this.state.stars.map((star, index) => {\n      return (\n        <div>\n          <Stars\n            star={star}\n            key={index}\n            id={index}\n            togelStar={this.togelFullStar}\n          />\n        </div>\n      );\n    });\n    return (\n      <section className=\"list-item-tail\">\n        <div className=\"stars\">{allstars}</div>\n         <span onClick={this.favClicked} className=\"heart\" >\n          {this.state.heart}\n        </span>\n        \n        {/* <span onClick={this.deleteClicked} className=\"icon\"><MdDeleteForever size={27}/></span> */}\n      </section>\n    );\n  }\n}\n\n// import React from 'react';\n// import Stars from './stars';\n// import { MdDeleteForever } from \"react-icons/md\";\n// import { IoIosStarOutline } from \"react-icons/io\";\n// import { IoIosStar } from \"react-icons/io\";\n// import { IoIosHeartEmpty} from \"react-icons/io\";\n// import { IoIosHeart} from \"react-icons/io\";\n\n// // import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n// export default class ListTail extends React.Component\n// { constructor(props){\n//     super(props);\n//     this.state = {\n//     stars:[<IoIosStarOutline size={22}/>,<IoIosStarOutline size={22}/>,<IoIosStarOutline size={22}/>,<IoIosStarOutline size={22}/>,<IoIosStarOutline size={22}/>],\n//     counter:0,\n//     heart: this.props.resturant.heart || <IoIosHeartEmpty size={27}/>,\n//     favFlag: false,\n\n// }\n// }\n\n//     deleteClicked = (e)=>{\n//         console.log(\"delete resturant\")\n//         // this.props.resturant = this.props.resturant(this)\n//         this.props.deleteAList(this.props.id);\n//     }\n//     togelFullStar = (index)=>{\n//         const starterCounter = this.state.counter;\n//         if (starterCounter === index ){\n//         const newStars=[...this.state.stars]\n//         // newStars.splice(index);\n//         newStars.splice(index,1,<IoIosStar size={22}/>);\n//         this.setState({\n//         stars:newStars,\n//         })\n//         const counterPlus = starterCounter + 1;\n//         this.setState({counter:counterPlus});\n//     }\n// }\n//     favClicked = (e)=>{\n//         console.log(\"click HEART\")\n//         if (!this.state.favFlag)\n//         {\n\n//             this.setState({heart:<IoIosHeart size={27}/> ,\n//                  favFlag:true,\n//                 })\n//                 // fav:[...this.state.fav]\n//                 // console.log(this.state.fav)\n//                 console.log('this.props.resturantobj', this.props.resturant)\n//             this.props.heartAll({...this.props.resturant,heart:<IoIosHeart size={27}/>})\n//         } else {\n//             console.log(\"click HEART ELSE\")\n//             this.setState({heart:<IoIosHeartEmpty  size={27}/> ,\n//                  favFlag:false,\n//                 })\n\n//         }\n//     }\n\n//     render(){\n//         const allstars = this.state.stars.map((star,index)=>{\n//             return (\n//                 <div >\n//                 <Stars star={star} key={index} id={index} togelStar={this.togelFullStar} />\n//                 </div>)\n//         })\n//         return(\n//             <section className=\"list-item-tail\">\n//             <div className=\"stars\">\n//                 {allstars}\n//             </div>\n//             <span onClick={this.favClicked} className=\"icon\">{this.state.heart}</span>\n//             <span onClick={this.deleteClicked} className=\"icon\"><MdDeleteForever size={27}/></span>\n//             </section>\n\n//         )\n//     }\n// }\n","import React from 'react';\nimport ListTail from './list-tail';\nimport { MdDeleteForever } from \"react-icons/md\";\n\n\nexport default class List extends React.Component{\n   \n    cheaked = () =>{\n        console.log(this.props.resturant + \"im list component\")\n        this.props.deleteSelected(this.props.resturant)\n    }\n    deleteClicked = (e)=>{\n        console.log(\"delete resturant\")\n        // this.props.resturant = this.props.resturant(this)\n        this.props.deleteAList(this.props.id);\n    }\n\n   \n    render(){\n        \n        return(\n            \n            <div class=\"list-container\">\n             <input type=\"checkbox\" className=\"checkbox\" onClick={this.cheaked}></input>\n             <h1>{this.props.resturant.name.charAt(0).toUpperCase() + this.props.resturant.name.slice(1)}</h1>\n             <p>{this.props.resturant.cusine}</p>\n             <p>{this.props.resturant.comment}</p>\n                <div className=\"footerList\">\n                  <span onClick={this.deleteClicked} className=\"icondelete\"><MdDeleteForever size={27}/></span> \n                  <ListTail heartAll={this.props.heartAll} deleteAList={this.props.deleteAList} resturant={this.props.resturant} key={this.props.index} id={this.props.index}/>\n                </div>\n            </div>\n\n             )\n    }\n}","import React from 'react';\nimport List from './list';\n// import ListTail from './list-tail';\n\n\nexport default class ListContainer extends React.Component{\nrender(){\n     let alllists = <p>No Data Found!</p>;\n    // let alllists = null;\n    \n    if (this.props.lists.length > 0) {\n        console.log('alllist data', this.props.lists)\n        alllists = this.props.lists.map((resturant, index) =>{\n            return (\n             <div className=\"list-item\"  > \n             {/* key={index} */}\n            <List resturant={resturant} index ={index} key ={index} map={this.props.map} deleteSelected={this.props.deleteSelected} deleteAList={this.props.deleteAList}  heartAll={this.props.heartAll}/>\n\n            {/* <ListTail heartAll={this.props.heartAll} deleteAList={this.props.deleteAList} resturant={resturant} key={index} id={index}/> */}\n            </div>)\n        });\n    }\n    return(\n          <div className=\"list\">\n              {alllists}\n          </div>\n    )\n}\n\n\n}","import React from 'react';\nimport axios from 'axios';\n\nexport default class Giphy extends React.Component{\n    // constructor(props){\n    //     super(props);\n    //     this.state={\n    //         img: ''\n    //     }\n    // }\n    giveMeMood=()=>{\n    axios({\n    method: 'GET',\n    url: 'https://api.giphy.com/v1/stickers/random?api_key=INYnrH1INJdy8yQ5SgKXEMMdIR7mNQFl&tag=eat&rating=G',\n  })\n    .then(res => {\n      // handle success\n      console.log(res.data.data.images.preview_gif.url);\n        \n      const giphy= res.data.data.images.preview_gif.url\n    //    this.setState({img:giphy})\n       this.props.imgto(giphy)\n    //   this.prpos.mood(url)\n    })\n    .catch(error => {\n      // handle error\n      console.log(error);\n    });\n}\nrender(){\n    return(<dive>\n     <label></label>\n     <button onClick={this.giveMeMood} type=\"button\" class=\"btn btn-warning\">Find Your Food Mood</button>\n\n     {/* <button onClick={this.giveMeMood}>Find Your Food Mood</button> */}\n      \n    </dive>\n\n    )\n}\n}","import React from \"react\";\nimport ListContainer from \"./listContainer\";\nimport Giphy from \"./giphy\";\nimport A from \"./a\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      resturantName: \"\",\n      cusine: \"\",\n      comment:'',\n      lists: [],\n      resturantNameObj: {},\n      img: \"\",\n      fav: [],\n      countery: [\"Saudi Arabia\", \"Kwaity\", \"Bahrain\"],\n      \n     \n\n    };\n  }\n\n  handleChangeRS = event => {\n    // console.log(event.target.value)\n    this.setState({ resturantName: event.target.value });\n  };\n  handleChangeCU = e => {\n    console.log(e.target.value);\n    this.setState({ cusine: e.target.value })\n  };\n  handleSubmit = event => {\n    event.preventDefault();\n    if (this.state.resturantName != \"\") {\n      console.log(this.state.resturantNameObj);\n\n      console.log(this.state.lists);\n      this.setState({\n        lists: [\n          ...this.state.lists,\n          {\n            name: this.state.resturantName,\n            cusine: this.state.cusine,\n            comment:this.state.comment,\n          }\n        ],\n        resturantName: \"\",\n        cusine: \"\",\n        comment:\"\",\n        checkedToDelet: \"false\",\n        delete: [],\n      });\n    }\n  };\n  // when youser click in on list to delete it\n  // new arry of list\n  handleDeleteAll = event => {\n    // if (checkedToDelet){\n    event.preventDefault();\n    console.log(this.state.lists);\n    this.setState({ lists: [] });\n    console.log(this.state.lists.length);\n  };\n  handlerDeleteAList = indexDelet => {\n    const newLists = [...this.state.lists];\n    newLists.splice(indexDelet, 1);\n    this.setState({\n      lists: newLists,\n      selected: false\n    });\n  };\n  deleteSelected = resturant => {\n    console.log(resturant + \"delet me\");\n    //  const newdelete=[...this.state.delete];\n    //  newdelete.push(resturant);\n    this.setState({\n      delete: [...this.state.delete, resturant],\n      selected: true\n    });\n  };\n  handleDeleteSelected = () => {\n    console.log(this.state.delete.length);\n    const newarr = [...this.state.lists];\n    this.state.delete.map(restdel => {\n      console.log(restdel);\n      console.log(this.state.lists);\n      this.state.lists.map(restlist => {\n        console.log(restlist);\n        if (restdel.name === restlist.name && (this.state.selected = true)) {\n          console.log(\"match\");\n          // const newarr = [...this.state.lists]\n          let index = newarr.indexOf(restlist);\n          console.log(index);\n          newarr.splice(index, 1);\n          console.log(newarr.length);\n          //  this.setState({lists:newarr ,delete:[]})\n          //  this.setState({lists:[...this.state.lists, ]]})\n        }\n      });\n    });\n    this.setState({ lists: newarr, delete: [] });\n  };\n  map = () => {\n    window.open(\"https://www.google.com/maps\");\n  };\n  giveMeMood = url => {\n    this.state.img = url;\n  };\n  imgtoApper = giphy => {\n    this.setState({ img: giphy });\n  };\n\n  favAll = obj => {\n    console.log(obj);\n    const newfav = [...this.state.fav];\n    newfav.push(obj);\n    this.setState({ fav: newfav });\n  };\n  textArea = (e)=>{\n    this.setState({comment:e.target.value})\n    console.log(this.state.comment)\n  }\n  counterySl = (e)=>{\n    this.setState({setState:e.target.value})\n  }\n  render() {\n    const allCont=this.state.countery.map((cont, index) => {\n      return (<option value={cont} \n              checked={this.state.countery === this.value}>\n              {index+1}. {cont}\n            </option>)\n            // selected\n    });\n    \n    return (\n      <div className=\"jumbotron text-center\">\n        <h1>Let's Eat</h1>\n        <div className=\"mood-area\">\n          <img\n            src={this.state.img}\n            className=\"rounded\"\n            className=\"giphy-name\"\n          ></img>\n          <br />\n          <Giphy imgto={this.imgtoApper} /> <br />\n        </div>\n        <div className=\"form\">\n          {/* <label>Add Your Favorite Resturant: </label>\n        <input \n        type=\"text\"\n        name=\"resturantName\"\n        placeholder=\"I like .....\"\n        value={this.state.resturantName}\n        onChange={this.handleChangeRS} /><br/> */}\n          <div className=\"form-group\">\n            <label for=\"formGroupExampleInput\">\n              Add Your Favorite Resturant:\n            </label>\n            <input\n              onChange={this.handleChangeRS}\n              value={this.state.resturantName}\n              type=\"text\"\n              className=\"form-control\"\n              id=\"formGroupExampleInput\"\n              placeholder=\"I like .....\"\n            />\n          </div>\n          <label>Cousine : </label>\n\n          <div class=\"form-check\">\n            <input\n              onChange={this.handleChangeCU}\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"exampleRadios\"\n              id=\"exampleRadios1\"\n              value=\"Arabic Food\"\n              checked={this.state.cusine === 'Arabic Food'}\n            />\n            <label class=\"form-check-label\" for=\"exampleRadios1\">\n              Arabic \n            </label>\n          </div>\n\n          <div class=\"form-check\">\n            <input\n              onChange={this.handleChangeCU}\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"exampleRadios\"\n              id=\"exampleRadios1\"\n              value=\"Aisan Food\"\n              checked={this.state.cusine === 'Aisan Food'}\n            />\n            <label class=\"form-check-label\" for=\"exampleRadios1\">\n               Aisan\n            </label>\n          </div>\n\n          <div class=\"form-check\">\n            <input\n              onChange={this.handleChangeCU}\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"exampleRadios\"\n              id=\"exampleRadios1\"\n              value=\"Indain Food \"\n              checked={this.state.cusine === 'Indain Food '}\n            />\n            <label class=\"form-check-label\" for=\"exampleRadios1\">\n            Indain \n            </label>\n          </div>\n          \n          <div class=\"form-check\">\n            <input\n              onChange={this.handleChangeCU}\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"exampleRadios\"\n              id=\"exampleRadios1\"\n              value=\"Italian Food \"\n              checked={this.state.cusine === 'Italian Food '}\n            />\n            <label class=\"form-check-label\" for=\"exampleRadios1\">\n            Italian \n            </label>\n          </div>\n\n          <div class=\"form-check\">\n            <input\n              onChange={this.handleChangeCU}\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"exampleRadios\"\n              id=\"exampleRadios1\"\n              value=\"Fast Food \"\n              checked={this.state.cusine === 'Fast Food '}\n            />\n            <label class=\"form-check-label\" for=\"exampleRadios1\">\n            Fast Food\n            </label>\n          </div>\n\n          <div class=\"form-check\">\n            <input\n              onChange={this.handleChangeCU}\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"exampleRadios\"\n              id=\"exampleRadios1\"\n              value=\"Coffee Shop\"\n              checked={this.state.cusine === 'Coffee Shop'}\n            />\n            <label class=\"form-check-label\" for=\"exampleRadios1\">\n            Coffee Shop \n            </label>\n          </div>\n          \n{/* RRTR:{allCont} */}\n        \n           <select id=\"countySel\" size=\"1\"  >\n          {allCont} </select>\n          {console.log(allCont)}\n           <br/>\n         \n           \n          {/* <label>location</label><button onClick={this.map}>find my resturant</button><br/> */}\n          \n          <label>Comments :</label><br/>\n          <textarea onChange={this.textArea} value={this.state.comment}></textarea> <br/>\n          <button\n            onClick={this.handleSubmit}\n            type=\"submit\"\n            class=\"btn btn-warning\"\n          >\n            Submit\n          </button>\n          <br />\n\n          <button onClick={this.handleDeleteAll}>Delete All</button>\n          <button onClick={this.handleDeleteSelected}>Delete </button>\n          <button onClick={this.favAllDisplay}>view All Favorites</button>\n          <br />\n        </div>\n        <div>\n          <ListContainer\n            lists={this.state.lists}\n            deleteSelected={this.deleteSelected}\n            deleteAList={this.handlerDeleteAList}\n            heartAll={this.favAll}\n            googlemap={this.map}\n          />\n        </div>\n\n        <hr />\n        <h3>My Favs</h3>\n        <ListContainer\n          lists={this.state.fav}\n          deleteSelected={this.deleteSelected}\n          deleteAList={this.handlerDeleteAList}\n          heartAll={this.favAll}\n          googlemap={this.map}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nexport default class A extends React.Component{\nrender(){\n    return(\n        <div><li>{this.props.countery}</li></div>\n    )\n}\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}